Metadata-Version: 2.1
Name: dcyto
Version: 0.1.5
Summary: imaging cytomerty tools
Author-email: Daniel Foyt <daniel.a.foyt@gmail.com>
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE.txt

# dcyto


dcyto is a tool to segment and analyse images of cells to produce flow like data. 

dcyto was writen by Daniel Foyt. To learn more about the modivation for this tool, read the paper [here](https://huanglab.ucsf.edu/publications).


# Installation

You can install dcyto with native python if you have python3.7+.

**Dependencies**, installed automaticaly when installed with conda/pip

 - cellpose (see note below) 
 - scikit-image
 - matplotlib
 - pathlib
 - pandas
 - fcswrite

### Installation Instructions

Simple install with pip:

    python -m pip install dcyto

To install the gpu enabled version of Cellpose which grately increases the speed of segmentation, see the [Cellpose GitHub](https://github.com/MouseLand/cellpose).

# Example
to run dcyto on a directory of tif images:

    import dcyto
    
    images_directory = 'path/to/tif/images/directory'
	segmentation_out_directory = 'path/to/save/directory'
	
	# run segmentation with Cellpose and save to segmentation_out_directory
	image_paths, CP_out_paths = dcyto.segment_with_cellpose(images = images_directory,
                                                  save_folder = segmentation_out_directory,
                                                  chan = 0) # channel to segment
    
    # use segmentation to extract the intensities in each channel in the images and save to a csv and fcs file
    results_DataFrame = dcyto.extract_intensities(image_paths = image_paths,
                                                  segment_paths = CP_out_paths,
							                      save_path_name = results.csv,
							                      fcs = True
				                                  chan_names = ['WF','BFB','GFP','mApple'])

